{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { initialState } from \"./Watches\";\nexport const counterSlice = createSlice({\n  name: \"Basket\",\n  initialState: initialState,\n  reducers: {\n    add: (state, action) => {\n      return state.map(item => {\n        if (item.id !== action.payload.id) {\n          return item;\n        }\n\n        return { ...item,\n          added: true,\n          quantity: item.quantity + 1\n        };\n      });\n    },\n    remove: (state, action) => {\n      return state.map(item => {\n        if (item.id !== action.payload.id) {\n          return item;\n        } else if (item.quantity <= 1) {\n          return { ...item,\n            quantity: 0,\n            added: false\n          };\n        }\n\n        return { ...item,\n          quantity: item.quantity - 1\n        };\n      });\n    },\n    clear: (state, action) => {\n      return state.map(item => {\n        if (item.id !== action.payload.id) return item;\n        return { ...item,\n          quantity: 0,\n          added: false\n        };\n      });\n    },\n    increment: (state, action) => {\n      return state.map(item => {\n        if (item.id !== action.payload.id) return item;\n        return { ...item,\n          quantity: item.quantity + 1\n        };\n      });\n    },\n    decrement: (state, action) => {\n      return state.map(item => {\n        if (item.id !== action.payload.id) return item;\n        return { ...item,\n          quantity: item.quantity - 1\n        };\n      });\n    }\n  }\n});\nexport const {\n  add,\n  remove,\n  clear,\n  increment,\n  decrement\n} = counterSlice.actions;\nexport default counterSlice.reducer;","map":{"version":3,"sources":["C:/Users/Muhib/Documents/GitHub/react-redux-watch-shopping-website-/src/Redux-ToolKit/CounterSlice.ts"],"names":["createSlice","initialState","counterSlice","name","reducers","add","state","action","map","item","id","payload","added","quantity","remove","clear","increment","decrement","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,YAAT,QAA6B,WAA7B;AAEA,OAAO,MAAMC,YAAY,GAAGF,WAAW,CAAC;AACtCG,EAAAA,IAAI,EAAE,QADgC;AAEtCF,EAAAA,YAAY,EAAEA,YAFwB;AAGtCG,EAAAA,QAAQ,EAAE;AACRC,IAAAA,GAAG,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACtB,aAAOD,KAAK,CAACE,GAAN,CAAWC,IAAD,IAAU;AACzB,YAAIA,IAAI,CAACC,EAAL,KAAYH,MAAM,CAACI,OAAP,CAAeD,EAA/B,EAAmC;AACjC,iBAAOD,IAAP;AACD;;AACD,eAAO,EACL,GAAGA,IADE;AAELG,UAAAA,KAAK,EAAE,IAFF;AAGLC,UAAAA,QAAQ,EAAEJ,IAAI,CAACI,QAAL,GAAgB;AAHrB,SAAP;AAKD,OATM,CAAP;AAUD,KAZO;AAaRC,IAAAA,MAAM,EAAE,CAACR,KAAD,EAAQC,MAAR,KAAmB;AACzB,aAAOD,KAAK,CAACE,GAAN,CAAWC,IAAD,IAAU;AACzB,YAAIA,IAAI,CAACC,EAAL,KAAYH,MAAM,CAACI,OAAP,CAAeD,EAA/B,EAAmC;AACjC,iBAAOD,IAAP;AACD,SAFD,MAEO,IAAIA,IAAI,CAACI,QAAL,IAAiB,CAArB,EAAwB;AAC7B,iBAAO,EACL,GAAGJ,IADE;AAELI,YAAAA,QAAQ,EAAE,CAFL;AAGLD,YAAAA,KAAK,EAAE;AAHF,WAAP;AAKD;;AACD,eAAO,EACL,GAAGH,IADE;AAELI,UAAAA,QAAQ,EAAEJ,IAAI,CAACI,QAAL,GAAgB;AAFrB,SAAP;AAID,OAdM,CAAP;AAeD,KA7BO;AA8BRE,IAAAA,KAAK,EAAE,CAACT,KAAD,EAAOC,MAAP,KAAkB;AACrB,aAAOD,KAAK,CAACE,GAAN,CAAWC,IAAD,IAAU;AACvB,YAAGA,IAAI,CAACC,EAAL,KAAYH,MAAM,CAACI,OAAP,CAAeD,EAA9B,EACA,OAAOD,IAAP;AAEJ,eAAM,EACF,GAAGA,IADD;AAEFI,UAAAA,QAAQ,EAAC,CAFP;AAGFD,UAAAA,KAAK,EAAC;AAHJ,SAAN;AAKC,OATM,CAAP;AAUH,KAzCO;AA0CRI,IAAAA,SAAS,EAAE,CAACV,KAAD,EAAOC,MAAP,KAAiB;AACxB,aAAOD,KAAK,CAACE,GAAN,CAAWC,IAAD,IAAQ;AACrB,YAAGA,IAAI,CAACC,EAAL,KAAYH,MAAM,CAACI,OAAP,CAAeD,EAA9B,EACA,OAAOD,IAAP;AAEJ,eAAM,EACF,GAAGA,IADD;AAEFI,UAAAA,QAAQ,EAACJ,IAAI,CAACI,QAAL,GAAc;AAFrB,SAAN;AAIC,OARM,CAAP;AASH,KApDO;AAqDRI,IAAAA,SAAS,EAAE,CAACX,KAAD,EAAOC,MAAP,KAAiB;AAC1B,aAAOD,KAAK,CAACE,GAAN,CAAWC,IAAD,IAAQ;AACrB,YAAGA,IAAI,CAACC,EAAL,KAAYH,MAAM,CAACI,OAAP,CAAeD,EAA9B,EACA,OAAOD,IAAP;AAEJ,eAAM,EACF,GAAGA,IADD;AAEFI,UAAAA,QAAQ,EAACJ,IAAI,CAACI,QAAL,GAAgB;AAFvB,SAAN;AAIC,OARM,CAAP;AASH;AA/DS;AAH4B,CAAD,CAAhC;AAsEP,OAAO,MAAM;AAAER,EAAAA,GAAF;AAAOS,EAAAA,MAAP;AAAeC,EAAAA,KAAf;AAAsBC,EAAAA,SAAtB;AAAiCC,EAAAA;AAAjC,IAA8Cf,YAAY,CAACgB,OAAjE;AACP,eAAehB,YAAY,CAACiB,OAA5B","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { initialState } from \"./Watches\";\r\n\r\nexport const counterSlice = createSlice({\r\n  name: \"Basket\",\r\n  initialState: initialState,\r\n  reducers: {\r\n    add: (state, action) => {\r\n      return state.map((item) => {\r\n        if (item.id !== action.payload.id) {\r\n          return item;\r\n        }\r\n        return {\r\n          ...item,\r\n          added: true,\r\n          quantity: item.quantity + 1,\r\n        };\r\n      });\r\n    },\r\n    remove: (state, action) => {\r\n      return state.map((item) => {\r\n        if (item.id !== action.payload.id) {\r\n          return item;\r\n        } else if (item.quantity <= 1) {\r\n          return {\r\n            ...item,\r\n            quantity: 0,\r\n            added: false,\r\n          };\r\n        }\r\n        return {\r\n          ...item,\r\n          quantity: item.quantity - 1,\r\n        };\r\n      });\r\n    },\r\n    clear: (state,action) => {\r\n        return state.map((item) => {\r\n            if(item.id !== action.payload.id)\r\n            return item;\r\n\r\n        return{\r\n            ...item,\r\n            quantity:0,\r\n            added:false\r\n        }\r\n        })\r\n    },\r\n    increment: (state,action) =>{\r\n        return state.map((item)=>{\r\n            if(item.id !== action.payload.id)\r\n            return item\r\n        \r\n        return{\r\n            ...item,\r\n            quantity:item.quantity+1\r\n        }\r\n        })\r\n    },\r\n    decrement: (state,action) =>{\r\n      return state.map((item)=>{\r\n          if(item.id !== action.payload.id)\r\n          return item\r\n      \r\n      return{\r\n          ...item,\r\n          quantity:item.quantity - 1 \r\n      } \r\n      })\r\n  }\r\n  },\r\n});\r\n\r\nexport const { add, remove, clear, increment, decrement} = counterSlice.actions;\r\nexport default counterSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}